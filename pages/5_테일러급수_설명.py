import streamlit as st
import numpy as np

st.title("테일러 급수 (Taylor Series) 📐")

st.markdown("""
## 1. 핵심 개념 정리

테일러 급수는 **함수 $f(x)$를 어떤 점 $x_0$에서의 미분계수를 이용해 무한한 합(급수)으로 근사**하는 것입니다.

주요 특징:
* 복잡한 함수를 다항식의 합으로 표현하는 방법
* 각 항의 계수는 $f$의 $x_0$에서의 미분계수로 결정됨
* 함수를 더 쉽게 계산하고 근사할 수 있게 해줌

## 2. 공식

테일러 급수의 일반식:

$$
T_n(x) = \sum_{k=0}^n \\frac{f^{(k)}(x_0)}{k!} (x - x_0)^k
$$

여기서:
* $f^{(k)}(x_0)$: 함수 $f$의 $x_0$에서의 $k$번째 미분계수
* $k!$: 팩토리얼
* $(x - x_0)^k$: $x_0$를 기준으로 한 $k$차 항

## 3. 시험 답안 예시 (실전용)

다음과 같이 작성하면 좋은 점수를 받을 수 있습니다:

```
테일러 급수란, 함수 f(x)를 어떤 점 x₀에서의 모든 미분계수를 이용하여 
무한한 다항식의 합으로 근사하거나 표현하는 방법을 의미한다.

즉, 복잡한 함수를 다항식의 합(무한급수)로 나타내어, 
그 점 근처에서는 함수값을 쉽게 근사할 수 있다.

테일러 급수의 일반식은 다음과 같다:
Tₙ(x) = ∑ₖ₌₀ⁿ [f^(k)(x₀)/k!]*(x-x₀)ᵏ

여기서 f^(k)(x₀)는 f(x)의 k번째 도함수를 x₀에서 평가한 값이다.
```

## 4. 시험 꿀팁 🍯

1. 반드시 포함해야 할 키워드:
   * "미분계수"
   * "무한합"
   * "근사"
   * "복잡한 함수 → 다항식의 합으로 바꿔준다"

2. 공식 작성 시 주의사항:
   * 시그마(Σ) 기호 정확히 쓰기
   * 첨자와 지수 표기 명확히 하기
   * 분수 표현 정확히 하기

3. 설명 시 강조할 점:
   * 근사의 개념
   * 미분계수의 역할
   * 실제 응용 가능성

## 5. 한 줄 요약 ✨

테일러 급수는 **함수를 미분계수를 이용한 무한한 다항식의 합으로 근사하는 방법**입니다.

## 6. 추가 학습 자료

### 맥클로린 급수와의 차이
* 맥클로린 급수는 테일러 급수의 특수한 경우로, $x_0 = 0$인 경우입니다.
* 즉, 원점에서의 테일러 급수를 맥클로린 급수라고 합니다.

### 실제 활용 예시
1. 삼각함수의 근사:
   * $\\sin(x) \\approx x - \\frac{x^3}{3!} + \\frac{x^5}{5!} - \\frac{x^7}{7!} + ...$
   * $\\cos(x) \\approx 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} - \\frac{x^6}{6!} + ...$

2. 지수함수의 근사:
   * $e^x \\approx 1 + x + \\frac{x^2}{2!} + \\frac{x^3}{3!} + \\frac{x^4}{4!} + ...$

3. 자연로그의 근사:
   * $\\ln(1+x) \\approx x - \\frac{x^2}{2} + \\frac{x^3}{3} - \\frac{x^4}{4} + ...$
""")

# 사이드바에 학습 가이드 추가
st.sidebar.markdown("""
## 📚 학습 가이드

1. 개념 이해하기
2. 공식 암기하기
3. 예제 풀어보기
4. 실전 답안 연습하기

## 🎯 시험 대비 체크리스트

- [ ] 테일러 급수 정의 암기
- [ ] 공식 완벽 암기
- [ ] 키워드 3개 이상 암기
- [ ] 예시 함수 1개 이상 암기
""") 